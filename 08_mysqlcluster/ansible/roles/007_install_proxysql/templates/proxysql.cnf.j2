################################################
#                                              #
#     FILE UNDER ANSIBLE CONFIG MANAGEMENT     #
#                                              #
#              keep hands away                 #
#                                              #
#    ansible-proxysql/templates/proxysql.j2    #
#                                              #
################################################

#file proxysql.cfg


datadir="/var/lib/proxysql"
errorlog="/var/lib/proxysql/proxysql.log"


admin_variables=
{
  admin_credentials="{{ proxysql_admin_user }}:{{ proxysql_admin_password }}"
  mysql_ifaces="{{ proxysql_admin_interface }}:{{ proxysql_admin_port }};/tmp/proxysql_admin.sock"
# refresh_interval=2000
# debug=true

{% if proxysql_cluster_name %}
  cluster_username="{{ proxysql_cluster_name }}"
  cluster_password="{{ proxysql_cluster_password }}"
{% endif %}
}

{% if proxysql_cluster_name %}
proxysql_servers =
(
{% for host in groups[proxysql_cluster_servers_group] %}
    {
        # {{ host }}
        hostname="{{ hostvars[host].proxysql_admin_interface }}"
        port={{ hostvars[host]['proxysql_admin_port'] | default(proxysql_admin_port) }}
        comment="{{ host }}"
    }{% if not loop.last %},{% endif %}
{% endfor %}
)

{% endif %}


mysql_variables=
{
  threads=4
  max_connections=2048
  default_query_delay=0
  default_query_timeout=36000000
  have_compress=true
  poll_timeout=2000
  interfaces="{{ proxysql_mysql_interface }}:{{ proxysql_mysql_port }};/tmp/proxysql.sock"
  default_schema="information_schema"
  stacksize=1048576
  server_version="{{ proxysql_mysql_server_version }}"
  connect_timeout_server=3000

# make sure to configure monitor username and password
# https://github.com/sysown/proxysql/wiki/Global-variables#mysql-monitor_username-mysql-monitor_password
  monitor_username="{{ proxysqlmonitor_db_user }}"
  monitor_password="{{ proxysqlmonitor_db_password }}"  
  monitor_history=600000
  monitor_connect_interval=60000
  monitor_ping_interval=10000
  monitor_read_only_interval=1500
  monitor_read_only_timeout=500
# ping_interval_server=120000
  ping_timeout_server=500
  commands_stats=true
  sessions_sort=true
  connect_retries_on_failure=10
}


# Defines all the MySQL servers

mysql_servers =
(
{% for srv in proxysql_mysql_servers %}
  {
    address="{{ srv.address }}",
    port={{ srv.port }},
    hostgroup={{ srv.hostgroup }},
    max_replication_lag = 1
  }{% if not loop.last %},{% endif %}
{% endfor %}


{% if proxysql_mysql_servers_group is defined %}
{%   for srv in groups[proxysql_mysql_servers_group] %}
  {
    address="{{ hostvars[srv]['ansible_' + hostvars[srv].proxysql_upstream_mysql_interface].ipv4.address }}",
    port={{ hostvars[srv].proxysql_upstream_mysql_port | default(3306) }},
    hostgroup={{ hostvars[srv].proxysql_hostgroup }}
  }{% if not loop.last %},{% endif %}
{%   endfor %}
{% endif %}
)


# Defines all the MySQL users

mysql_users:
(
{% for usr in proxysql_mysql_users %}
  {
    username="{{ usr.username }}",
    password="{{ usr.password }}",
    default_hostgroup="{{ usr.default_hostgroup | default(0) }}"
  }{% if not loop.last %},{% endif %}
{% endfor %}
)

# Defines MySQL Query Rules

mysql_query_rules:
(
{% for rule in proxysql_mysql_query_rules %}
  {
    rule_id={{ loop.index }}
    match_pattern="{{ rule.match_pattern }}",
    destination_hostgroup={{ rule.destination_hostgroup | default(0) }}
  }
{%   if not loop.last %},

{%   endif %}
{% endfor %}
)

scheduler=
(
#  {
#    id=1
#    active=0
#    interval_ms=10000
#    filename="/var/lib/proxysql/proxysql_galera_checker.sh"
#    arg1="0"
#    arg2="0"
#    arg3="0"
#    arg4="1"
#    arg5="/var/lib/proxysql/proxysql_galera_checker.log"
#  }
)


mysql_replication_hostgroups=
(
#        {
#                writer_hostgroup=30
#                reader_hostgroup=40
#                comment="test repl 1"
#       },
#       {
#                writer_hostgroup=50
#                reader_hostgroup=60
#                comment="test repl 2"
#        }
)




# http://www.hyperrealm.com/libconfig/libconfig_manual.html#Configuration-File-Grammar
#
# Below is the BNF grammar for configuration files. Comments and include directives are not part of the grammar, so they are not included here. 
#
# configuration = setting-list | empty
#
# setting-list = setting | setting-list setting
#     
# setting = name (":" | "=") value (";" | "," | empty)
#     
# value = scalar-value | array | list | group
#     
# value-list = value | value-list "," value
#     
# scalar-value = boolean | integer | integer64 | hex | hex64 | float
#                | string
#     
# scalar-value-list = scalar-value | scalar-value-list "," scalar-value
#     
# array = "[" (scalar-value-list | empty) "]"
#     
# list = "(" (value-list | empty) ")"
#     
# group = "{" (setting-list | empty) "}"
#     
# empty =