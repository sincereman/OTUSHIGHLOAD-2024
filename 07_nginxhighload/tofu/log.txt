[0m[1mdata.yandex_compute_image.debian12: Reading...[0m[0m
[0m[1mdata.yandex_compute_image.centos9: Reading...[0m[0m
[0m[1mdata.yandex_compute_image.nat-instance-ubuntu: Reading...[0m[0m
[0m[1mdata.yandex_compute_image.centos8: Reading...[0m[0m
[0m[1mdata.yandex_compute_image.centos8: Read complete after 0s [id=fd8qfp90a5l0m3d2htrm][0m
[0m[1mdata.yandex_compute_image.debian12: Read complete after 0s [id=fd8do7rb69jm50c3u8bs][0m
[0m[1mdata.yandex_compute_image.centos9: Read complete after 0s [id=fd8cj4jlm40vrrq4pc37][0m
[0m[1mdata.yandex_compute_image.nat-instance-ubuntu: Read complete after 0s [id=fd8kd604tsdb7egpnm98][0m

OpenTofu used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

OpenTofu will perform the following actions:

[1m  # local_file.group_vars[0m will be created
[0m  [32m+[0m[0m resource "local_file" "group_vars" {
      [32m+[0m[0m content              = <<-EOT
            ---
            # group vars
            
            ip_address:
            otus-frontend-1-web: 10.100.0.200 
            otus-frontend-2-web: 10.100.0.201 
            otus-nodeweb-1-web: 10.100.0.10
            otus-nodeweb-1-db: 10.110.0.10 
            otus-nodeweb-2-web: 10.100.0.11
            otus-nodeweb-2-db: 10.110.0.11 
            otus-nodeweb-3-web: 10.100.0.12
            otus-nodeweb-3-db: 10.110.0.12 
            otus-nodedb-1-db: 10.110.0.50
        EOT
      [32m+[0m[0m content_base64sha256 = (known after apply)
      [32m+[0m[0m content_base64sha512 = (known after apply)
      [32m+[0m[0m content_md5          = (known after apply)
      [32m+[0m[0m content_sha1         = (known after apply)
      [32m+[0m[0m content_sha256       = (known after apply)
      [32m+[0m[0m content_sha512       = (known after apply)
      [32m+[0m[0m directory_permission = "0777"
      [32m+[0m[0m file_permission      = "0644"
      [32m+[0m[0m filename             = "./../ansible/group_vars/all/main.yml"
      [32m+[0m[0m id                   = (known after apply)
    }

[1m  # local_file.inventory[0m will be created
[0m  [32m+[0m[0m resource "local_file" "inventory" {
      [32m+[0m[0m content              = (known after apply)
      [32m+[0m[0m content_base64sha256 = (known after apply)
      [32m+[0m[0m content_base64sha512 = (known after apply)
      [32m+[0m[0m content_md5          = (known after apply)
      [32m+[0m[0m content_sha1         = (known after apply)
      [32m+[0m[0m content_sha256       = (known after apply)
      [32m+[0m[0m content_sha512       = (known after apply)
      [32m+[0m[0m directory_permission = "0777"
      [32m+[0m[0m file_permission      = "0644"
      [32m+[0m[0m filename             = "./../ansible/inventories/hosts"
      [32m+[0m[0m id                   = (known after apply)
    }

[1m  # yandex_compute_disk.volumes[0][0m will be created
[0m  [32m+[0m[0m resource "yandex_compute_disk" "volumes" {
      [32m+[0m[0m block_size  = 4096
      [32m+[0m[0m created_at  = (known after apply)
      [32m+[0m[0m folder_id   = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "disk-nodewebstatic-1"
      [32m+[0m[0m product_ids = (known after apply)
      [32m+[0m[0m size        = 1
      [32m+[0m[0m status      = (known after apply)
      [32m+[0m[0m type        = "network-hdd"
      [32m+[0m[0m zone        = "ru-central1-b"
    }

[1m  # yandex_compute_disk.volumes[1][0m will be created
[0m  [32m+[0m[0m resource "yandex_compute_disk" "volumes" {
      [32m+[0m[0m block_size  = 4096
      [32m+[0m[0m created_at  = (known after apply)
      [32m+[0m[0m folder_id   = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "disk-nodewebstatic-2"
      [32m+[0m[0m product_ids = (known after apply)
      [32m+[0m[0m size        = 1
      [32m+[0m[0m status      = (known after apply)
      [32m+[0m[0m type        = "network-hdd"
      [32m+[0m[0m zone        = "ru-central1-b"
    }

[1m  # yandex_compute_disk.volumes[2][0m will be created
[0m  [32m+[0m[0m resource "yandex_compute_disk" "volumes" {
      [32m+[0m[0m block_size  = 4096
      [32m+[0m[0m created_at  = (known after apply)
      [32m+[0m[0m folder_id   = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "disk-nodewebstatic-3"
      [32m+[0m[0m product_ids = (known after apply)
      [32m+[0m[0m size        = 1
      [32m+[0m[0m status      = (known after apply)
      [32m+[0m[0m type        = "network-hdd"
      [32m+[0m[0m zone        = "ru-central1-b"
    }

[1m  # yandex_compute_instance.bastion[0][0m will be created
[0m  [32m+[0m[0m resource "yandex_compute_instance" "bastion" {
      [32m+[0m[0m created_at                = (known after apply)
      [32m+[0m[0m folder_id                 = (known after apply)
      [32m+[0m[0m fqdn                      = (known after apply)
      [32m+[0m[0m gpu_cluster_id            = (known after apply)
      [32m+[0m[0m hostname                  = "otus-bastion-1"
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m maintenance_grace_period  = (known after apply)
      [32m+[0m[0m maintenance_policy        = (known after apply)
      [32m+[0m[0m metadata                  = {
          [32m+[0m[0m "enable-oslogin"     = "false"
          [32m+[0m[0m "serial-port-enable" = "1"
          [32m+[0m[0m "ssh-keys"           = <<-EOT
                devops:ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIKmUhAyceqbbc3AivLkcg60EINDUgf8pTmvA0vnvs8gq sincere@sincere-ubuntuotus
            EOT
          [32m+[0m[0m "user-data"          = <<-EOT
                #cloud-config
                users:
                  - name: devops
                    groups: sudo
                    shell: /bin/bash
                    sudo: ['ALL=(ALL) NOPASSWD:ALL'] 
                    ssh-authorized-keys:
                      - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIKmUhAyceqbbc3AivLkcg60EINDUgf8pTmvA0vnvs8gq sincere@sincere-ubuntuotus
                disable_root: true
                timezone: Europe/Moscow
                repo_update: true
                repo_upgrade: true
            EOT
        }
      [32m+[0m[0m name                      = "otus-bastion-1"
      [32m+[0m[0m network_acceleration_type = "standard"
      [32m+[0m[0m platform_id               = "standard-v1"
      [32m+[0m[0m service_account_id        = (known after apply)
      [32m+[0m[0m status                    = (known after apply)
      [32m+[0m[0m zone                      = (known after apply)

      [32m+[0m[0m boot_disk {
          [32m+[0m[0m auto_delete = true
          [32m+[0m[0m device_name = (known after apply)
          [32m+[0m[0m disk_id     = (known after apply)
          [32m+[0m[0m mode        = (known after apply)

          [32m+[0m[0m initialize_params {
              [32m+[0m[0m block_size  = (known after apply)
              [32m+[0m[0m description = (known after apply)
              [32m+[0m[0m image_id    = "fd8kd604tsdb7egpnm98"
              [32m+[0m[0m name        = "boot-disk-bastion-1"
              [32m+[0m[0m size        = 10
              [32m+[0m[0m snapshot_id = (known after apply)
              [32m+[0m[0m type        = "network-hdd"
            }
        }

      [32m+[0m[0m network_interface {
          [32m+[0m[0m index              = 0
          [32m+[0m[0m ip_address         = (known after apply)
          [32m+[0m[0m ipv4               = true
          [32m+[0m[0m ipv6               = (known after apply)
          [32m+[0m[0m ipv6_address       = (known after apply)
          [32m+[0m[0m mac_address        = (known after apply)
          [32m+[0m[0m nat                = true
          [32m+[0m[0m nat_ip_address     = (known after apply)
          [32m+[0m[0m nat_ip_version     = (known after apply)
          [32m+[0m[0m security_group_ids = (known after apply)
          [32m+[0m[0m subnet_id          = (known after apply)
        }

      [32m+[0m[0m resources {
          [32m+[0m[0m core_fraction = 5
          [32m+[0m[0m cores         = 2
          [32m+[0m[0m memory        = 2
        }

      [32m+[0m[0m scheduling_policy {
          [32m+[0m[0m preemptible = true
        }
    }

[1m  # yandex_compute_instance.frontend[0][0m will be created
[0m  [32m+[0m[0m resource "yandex_compute_instance" "frontend" {
      [32m+[0m[0m allow_stopping_for_update = true
      [32m+[0m[0m created_at                = (known after apply)
      [32m+[0m[0m folder_id                 = (known after apply)
      [32m+[0m[0m fqdn                      = (known after apply)
      [32m+[0m[0m gpu_cluster_id            = (known after apply)
      [32m+[0m[0m hostname                  = "otus-frontend-1"
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m maintenance_grace_period  = (known after apply)
      [32m+[0m[0m maintenance_policy        = (known after apply)
      [32m+[0m[0m metadata                  = {
          [32m+[0m[0m "enable-oslogin"     = "false"
          [32m+[0m[0m "serial-port-enable" = "1"
          [32m+[0m[0m "ssh-keys"           = <<-EOT
                devops:ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIKmUhAyceqbbc3AivLkcg60EINDUgf8pTmvA0vnvs8gq sincere@sincere-ubuntuotus
            EOT
          [32m+[0m[0m "user-data"          = <<-EOT
                #cloud-config
                users:
                  - name: devops
                    groups: sudo
                    shell: /bin/bash
                    sudo: ['ALL=(ALL) NOPASSWD:ALL'] 
                    ssh-authorized-keys:
                      - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIKmUhAyceqbbc3AivLkcg60EINDUgf8pTmvA0vnvs8gq sincere@sincere-ubuntuotus
                disable_root: true
                timezone: Europe/Moscow
                repo_update: true
                repo_upgrade: true
            EOT
        }
      [32m+[0m[0m name                      = "otus-frontend-1"
      [32m+[0m[0m network_acceleration_type = "standard"
      [32m+[0m[0m platform_id               = "standard-v1"
      [32m+[0m[0m service_account_id        = (known after apply)
      [32m+[0m[0m status                    = (known after apply)
      [32m+[0m[0m zone                      = (known after apply)

      [32m+[0m[0m boot_disk {
          [32m+[0m[0m auto_delete = true
          [32m+[0m[0m device_name = (known after apply)
          [32m+[0m[0m disk_id     = (known after apply)
          [32m+[0m[0m mode        = (known after apply)

          [32m+[0m[0m initialize_params {
              [32m+[0m[0m block_size  = (known after apply)
              [32m+[0m[0m description = (known after apply)
              [32m+[0m[0m image_id    = "fd8do7rb69jm50c3u8bs"
              [32m+[0m[0m name        = "boot-disk-frontend-1"
              [32m+[0m[0m size        = 10
              [32m+[0m[0m snapshot_id = (known after apply)
              [32m+[0m[0m type        = "network-hdd"
            }
        }

      [32m+[0m[0m network_interface {
          [32m+[0m[0m index              = 0
          [32m+[0m[0m ip_address         = "10.100.0.200"
          [32m+[0m[0m ipv4               = true
          [32m+[0m[0m ipv6               = (known after apply)
          [32m+[0m[0m ipv6_address       = (known after apply)
          [32m+[0m[0m mac_address        = (known after apply)
          [32m+[0m[0m nat                = true
          [32m+[0m[0m nat_ip_address     = (known after apply)
          [32m+[0m[0m nat_ip_version     = (known after apply)
          [32m+[0m[0m security_group_ids = (known after apply)
          [32m+[0m[0m subnet_id          = (known after apply)
        }
      [32m+[0m[0m network_interface {
          [32m+[0m[0m index              = 1
          [32m+[0m[0m ip_address         = "10.200.0.200"
          [32m+[0m[0m ipv4               = true
          [32m+[0m[0m ipv6               = (known after apply)
          [32m+[0m[0m ipv6_address       = (known after apply)
          [32m+[0m[0m mac_address        = (known after apply)
          [32m+[0m[0m nat                = false
          [32m+[0m[0m nat_ip_address     = (known after apply)
          [32m+[0m[0m nat_ip_version     = (known after apply)
          [32m+[0m[0m security_group_ids = (known after apply)
          [32m+[0m[0m subnet_id          = (known after apply)
        }

      [32m+[0m[0m resources {
          [32m+[0m[0m core_fraction = 5
          [32m+[0m[0m cores         = 2
          [32m+[0m[0m memory        = 2
        }

      [32m+[0m[0m scheduling_policy {
          [32m+[0m[0m preemptible = true
        }
    }

[1m  # yandex_compute_instance.frontend[1][0m will be created
[0m  [32m+[0m[0m resource "yandex_compute_instance" "frontend" {
      [32m+[0m[0m allow_stopping_for_update = true
      [32m+[0m[0m created_at                = (known after apply)
      [32m+[0m[0m folder_id                 = (known after apply)
      [32m+[0m[0m fqdn                      = (known after apply)
      [32m+[0m[0m gpu_cluster_id            = (known after apply)
      [32m+[0m[0m hostname                  = "otus-frontend-2"
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m maintenance_grace_period  = (known after apply)
      [32m+[0m[0m maintenance_policy        = (known after apply)
      [32m+[0m[0m metadata                  = {
          [32m+[0m[0m "enable-oslogin"     = "false"
          [32m+[0m[0m "serial-port-enable" = "1"
          [32m+[0m[0m "ssh-keys"           = <<-EOT
                devops:ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIKmUhAyceqbbc3AivLkcg60EINDUgf8pTmvA0vnvs8gq sincere@sincere-ubuntuotus
            EOT
          [32m+[0m[0m "user-data"          = <<-EOT
                #cloud-config
                users:
                  - name: devops
                    groups: sudo
                    shell: /bin/bash
                    sudo: ['ALL=(ALL) NOPASSWD:ALL'] 
                    ssh-authorized-keys:
                      - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIKmUhAyceqbbc3AivLkcg60EINDUgf8pTmvA0vnvs8gq sincere@sincere-ubuntuotus
                disable_root: true
                timezone: Europe/Moscow
                repo_update: true
                repo_upgrade: true
            EOT
        }
      [32m+[0m[0m name                      = "otus-frontend-2"
      [32m+[0m[0m network_acceleration_type = "standard"
      [32m+[0m[0m platform_id               = "standard-v1"
      [32m+[0m[0m service_account_id        = (known after apply)
      [32m+[0m[0m status                    = (known after apply)
      [32m+[0m[0m zone                      = (known after apply)

      [32m+[0m[0m boot_disk {
          [32m+[0m[0m auto_delete = true
          [32m+[0m[0m device_name = (known after apply)
          [32m+[0m[0m disk_id     = (known after apply)
          [32m+[0m[0m mode        = (known after apply)

          [32m+[0m[0m initialize_params {
              [32m+[0m[0m block_size  = (known after apply)
              [32m+[0m[0m description = (known after apply)
              [32m+[0m[0m image_id    = "fd8do7rb69jm50c3u8bs"
              [32m+[0m[0m name        = "boot-disk-frontend-2"
              [32m+[0m[0m size        = 10
              [32m+[0m[0m snapshot_id = (known after apply)
              [32m+[0m[0m type        = "network-hdd"
            }
        }

      [32m+[0m[0m network_interface {
          [32m+[0m[0m index              = 0
          [32m+[0m[0m ip_address         = "10.100.0.201"
          [32m+[0m[0m ipv4               = true
          [32m+[0m[0m ipv6               = (known after apply)
          [32m+[0m[0m ipv6_address       = (known after apply)
          [32m+[0m[0m mac_address        = (known after apply)
          [32m+[0m[0m nat                = true
          [32m+[0m[0m nat_ip_address     = (known after apply)
          [32m+[0m[0m nat_ip_version     = (known after apply)
          [32m+[0m[0m security_group_ids = (known after apply)
          [32m+[0m[0m subnet_id          = (known after apply)
        }
      [32m+[0m[0m network_interface {
          [32m+[0m[0m index              = 1
          [32m+[0m[0m ip_address         = "10.200.0.201"
          [32m+[0m[0m ipv4               = true
          [32m+[0m[0m ipv6               = (known after apply)
          [32m+[0m[0m ipv6_address       = (known after apply)
          [32m+[0m[0m mac_address        = (known after apply)
          [32m+[0m[0m nat                = false
          [32m+[0m[0m nat_ip_address     = (known after apply)
          [32m+[0m[0m nat_ip_version     = (known after apply)
          [32m+[0m[0m security_group_ids = (known after apply)
          [32m+[0m[0m subnet_id          = (known after apply)
        }

      [32m+[0m[0m resources {
          [32m+[0m[0m core_fraction = 5
          [32m+[0m[0m cores         = 2
          [32m+[0m[0m memory        = 2
        }

      [32m+[0m[0m scheduling_policy {
          [32m+[0m[0m preemptible = true
        }
    }

[1m  # yandex_compute_instance.nodedb[0][0m will be created
[0m  [32m+[0m[0m resource "yandex_compute_instance" "nodedb" {
      [32m+[0m[0m created_at                = (known after apply)
      [32m+[0m[0m folder_id                 = (known after apply)
      [32m+[0m[0m fqdn                      = (known after apply)
      [32m+[0m[0m gpu_cluster_id            = (known after apply)
      [32m+[0m[0m hostname                  = "otus-nodedb-1"
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m maintenance_grace_period  = (known after apply)
      [32m+[0m[0m maintenance_policy        = (known after apply)
      [32m+[0m[0m metadata                  = {
          [32m+[0m[0m "ssh-keys"  = <<-EOT
                devops:ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIKmUhAyceqbbc3AivLkcg60EINDUgf8pTmvA0vnvs8gq sincere@sincere-ubuntuotus
            EOT
          [32m+[0m[0m "user-data" = <<-EOT
                #cloud-config
                users:
                  - name: devops
                    groups: sudo
                    shell: /bin/bash
                    sudo: ['ALL=(ALL) NOPASSWD:ALL'] 
                    ssh-authorized-keys:
                      - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIKmUhAyceqbbc3AivLkcg60EINDUgf8pTmvA0vnvs8gq sincere@sincere-ubuntuotus
                disable_root: true
                timezone: Europe/Moscow
                repo_update: true
                repo_upgrade: true
            EOT
        }
      [32m+[0m[0m name                      = "otus-nodedb-1"
      [32m+[0m[0m network_acceleration_type = "standard"
      [32m+[0m[0m platform_id               = "standard-v1"
      [32m+[0m[0m service_account_id        = (known after apply)
      [32m+[0m[0m status                    = (known after apply)
      [32m+[0m[0m zone                      = (known after apply)

      [32m+[0m[0m boot_disk {
          [32m+[0m[0m auto_delete = true
          [32m+[0m[0m device_name = (known after apply)
          [32m+[0m[0m disk_id     = (known after apply)
          [32m+[0m[0m mode        = (known after apply)

          [32m+[0m[0m initialize_params {
              [32m+[0m[0m block_size  = (known after apply)
              [32m+[0m[0m description = (known after apply)
              [32m+[0m[0m image_id    = "fd8do7rb69jm50c3u8bs"
              [32m+[0m[0m name        = "boot-disk-nodedb1"
              [32m+[0m[0m size        = 10
              [32m+[0m[0m snapshot_id = (known after apply)
              [32m+[0m[0m type        = "network-hdd"
            }
        }

      [32m+[0m[0m network_interface {
          [32m+[0m[0m index              = 0
          [32m+[0m[0m ip_address         = "10.200.0.50"
          [32m+[0m[0m ipv4               = true
          [32m+[0m[0m ipv6               = (known after apply)
          [32m+[0m[0m ipv6_address       = (known after apply)
          [32m+[0m[0m mac_address        = (known after apply)
          [32m+[0m[0m nat                = false
          [32m+[0m[0m nat_ip_address     = (known after apply)
          [32m+[0m[0m nat_ip_version     = (known after apply)
          [32m+[0m[0m security_group_ids = (known after apply)
          [32m+[0m[0m subnet_id          = (known after apply)
        }
      [32m+[0m[0m network_interface {
          [32m+[0m[0m index              = 1
          [32m+[0m[0m ip_address         = "10.110.0.50"
          [32m+[0m[0m ipv4               = true
          [32m+[0m[0m ipv6               = (known after apply)
          [32m+[0m[0m ipv6_address       = (known after apply)
          [32m+[0m[0m mac_address        = (known after apply)
          [32m+[0m[0m nat                = false
          [32m+[0m[0m nat_ip_address     = (known after apply)
          [32m+[0m[0m nat_ip_version     = (known after apply)
          [32m+[0m[0m security_group_ids = (known after apply)
          [32m+[0m[0m subnet_id          = (known after apply)
        }

      [32m+[0m[0m resources {
          [32m+[0m[0m core_fraction = 5
          [32m+[0m[0m cores         = 2
          [32m+[0m[0m memory        = 2
        }

      [32m+[0m[0m scheduling_policy {
          [32m+[0m[0m preemptible = true
        }
    }

[1m  # yandex_compute_instance.nodeweb[0][0m will be created
[0m  [32m+[0m[0m resource "yandex_compute_instance" "nodeweb" {
      [32m+[0m[0m created_at                = (known after apply)
      [32m+[0m[0m folder_id                 = (known after apply)
      [32m+[0m[0m fqdn                      = (known after apply)
      [32m+[0m[0m gpu_cluster_id            = (known after apply)
      [32m+[0m[0m hostname                  = "otus-nodeweb-1"
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m maintenance_grace_period  = (known after apply)
      [32m+[0m[0m maintenance_policy        = (known after apply)
      [32m+[0m[0m metadata                  = {
          [32m+[0m[0m "ssh-keys"  = <<-EOT
                devops:ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIKmUhAyceqbbc3AivLkcg60EINDUgf8pTmvA0vnvs8gq sincere@sincere-ubuntuotus
            EOT
          [32m+[0m[0m "user-data" = <<-EOT
                #cloud-config
                users:
                  - name: devops
                    groups: sudo
                    shell: /bin/bash
                    sudo: ['ALL=(ALL) NOPASSWD:ALL'] 
                    ssh-authorized-keys:
                      - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIKmUhAyceqbbc3AivLkcg60EINDUgf8pTmvA0vnvs8gq sincere@sincere-ubuntuotus
                disable_root: true
                timezone: Europe/Moscow
                repo_update: true
                repo_upgrade: true
            EOT
        }
      [32m+[0m[0m name                      = "otus-nodeweb-1"
      [32m+[0m[0m network_acceleration_type = "standard"
      [32m+[0m[0m platform_id               = "standard-v1"
      [32m+[0m[0m service_account_id        = (known after apply)
      [32m+[0m[0m status                    = (known after apply)
      [32m+[0m[0m zone                      = (known after apply)

      [32m+[0m[0m boot_disk {
          [32m+[0m[0m auto_delete = true
          [32m+[0m[0m device_name = (known after apply)
          [32m+[0m[0m disk_id     = (known after apply)
          [32m+[0m[0m mode        = (known after apply)

          [32m+[0m[0m initialize_params {
              [32m+[0m[0m block_size  = (known after apply)
              [32m+[0m[0m description = (known after apply)
              [32m+[0m[0m image_id    = "fd8do7rb69jm50c3u8bs"
              [32m+[0m[0m name        = "boot-disk-nodeweb-1"
              [32m+[0m[0m size        = 10
              [32m+[0m[0m snapshot_id = (known after apply)
              [32m+[0m[0m type        = "network-hdd"
            }
        }

      [32m+[0m[0m network_interface {
          [32m+[0m[0m index              = 0
          [32m+[0m[0m ip_address         = "10.200.0.10"
          [32m+[0m[0m ipv4               = true
          [32m+[0m[0m ipv6               = (known after apply)
          [32m+[0m[0m ipv6_address       = (known after apply)
          [32m+[0m[0m mac_address        = (known after apply)
          [32m+[0m[0m nat                = false
          [32m+[0m[0m nat_ip_address     = (known after apply)
          [32m+[0m[0m nat_ip_version     = (known after apply)
          [32m+[0m[0m security_group_ids = (known after apply)
          [32m+[0m[0m subnet_id          = (known after apply)
        }
      [32m+[0m[0m network_interface {
          [32m+[0m[0m index              = 1
          [32m+[0m[0m ip_address         = "10.100.0.10"
          [32m+[0m[0m ipv4               = true
          [32m+[0m[0m ipv6               = (known after apply)
          [32m+[0m[0m ipv6_address       = (known after apply)
          [32m+[0m[0m mac_address        = (known after apply)
          [32m+[0m[0m nat                = false
          [32m+[0m[0m nat_ip_address     = (known after apply)
          [32m+[0m[0m nat_ip_version     = (known after apply)
          [32m+[0m[0m security_group_ids = (known after apply)
          [32m+[0m[0m subnet_id          = (known after apply)
        }
      [32m+[0m[0m network_interface {
          [32m+[0m[0m index              = 2
          [32m+[0m[0m ip_address         = "10.110.0.10"
          [32m+[0m[0m ipv4               = true
          [32m+[0m[0m ipv6               = (known after apply)
          [32m+[0m[0m ipv6_address       = (known after apply)
          [32m+[0m[0m mac_address        = (known after apply)
          [32m+[0m[0m nat                = false
          [32m+[0m[0m nat_ip_address     = (known after apply)
          [32m+[0m[0m nat_ip_version     = (known after apply)
          [32m+[0m[0m security_group_ids = (known after apply)
          [32m+[0m[0m subnet_id          = (known after apply)
        }

      [32m+[0m[0m resources {
          [32m+[0m[0m core_fraction = 5
          [32m+[0m[0m cores         = 2
          [32m+[0m[0m memory        = 2
        }

      [32m+[0m[0m scheduling_policy {
          [32m+[0m[0m preemptible = true
        }

      [32m+[0m[0m secondary_disk {
          [32m+[0m[0m auto_delete = false
          [32m+[0m[0m device_name = (known after apply)
          [32m+[0m[0m disk_id     = (known after apply)
          [32m+[0m[0m mode        = "READ_WRITE"
        }
    }

[1m  # yandex_compute_instance.nodeweb[1][0m will be created
[0m  [32m+[0m[0m resource "yandex_compute_instance" "nodeweb" {
      [32m+[0m[0m created_at                = (known after apply)
      [32m+[0m[0m folder_id                 = (known after apply)
      [32m+[0m[0m fqdn                      = (known after apply)
      [32m+[0m[0m gpu_cluster_id            = (known after apply)
      [32m+[0m[0m hostname                  = "otus-nodeweb-2"
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m maintenance_grace_period  = (known after apply)
      [32m+[0m[0m maintenance_policy        = (known after apply)
      [32m+[0m[0m metadata                  = {
          [32m+[0m[0m "ssh-keys"  = <<-EOT
                devops:ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIKmUhAyceqbbc3AivLkcg60EINDUgf8pTmvA0vnvs8gq sincere@sincere-ubuntuotus
            EOT
          [32m+[0m[0m "user-data" = <<-EOT
                #cloud-config
                users:
                  - name: devops
                    groups: sudo
                    shell: /bin/bash
                    sudo: ['ALL=(ALL) NOPASSWD:ALL'] 
                    ssh-authorized-keys:
                      - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIKmUhAyceqbbc3AivLkcg60EINDUgf8pTmvA0vnvs8gq sincere@sincere-ubuntuotus
                disable_root: true
                timezone: Europe/Moscow
                repo_update: true
                repo_upgrade: true
            EOT
        }
      [32m+[0m[0m name                      = "otus-nodeweb-2"
      [32m+[0m[0m network_acceleration_type = "standard"
      [32m+[0m[0m platform_id               = "standard-v1"
      [32m+[0m[0m service_account_id        = (known after apply)
      [32m+[0m[0m status                    = (known after apply)
      [32m+[0m[0m zone                      = (known after apply)

      [32m+[0m[0m boot_disk {
          [32m+[0m[0m auto_delete = true
          [32m+[0m[0m device_name = (known after apply)
          [32m+[0m[0m disk_id     = (known after apply)
          [32m+[0m[0m mode        = (known after apply)

          [32m+[0m[0m initialize_params {
              [32m+[0m[0m block_size  = (known after apply)
              [32m+[0m[0m description = (known after apply)
              [32m+[0m[0m image_id    = "fd8do7rb69jm50c3u8bs"
              [32m+[0m[0m name        = "boot-disk-nodeweb-2"
              [32m+[0m[0m size        = 10
              [32m+[0m[0m snapshot_id = (known after apply)
              [32m+[0m[0m type        = "network-hdd"
            }
        }

      [32m+[0m[0m network_interface {
          [32m+[0m[0m index              = 0
          [32m+[0m[0m ip_address         = "10.200.0.11"
          [32m+[0m[0m ipv4               = true
          [32m+[0m[0m ipv6               = (known after apply)
          [32m+[0m[0m ipv6_address       = (known after apply)
          [32m+[0m[0m mac_address        = (known after apply)
          [32m+[0m[0m nat                = false
          [32m+[0m[0m nat_ip_address     = (known after apply)
          [32m+[0m[0m nat_ip_version     = (known after apply)
          [32m+[0m[0m security_group_ids = (known after apply)
          [32m+[0m[0m subnet_id          = (known after apply)
        }
      [32m+[0m[0m network_interface {
          [32m+[0m[0m index              = 1
          [32m+[0m[0m ip_address         = "10.100.0.11"
          [32m+[0m[0m ipv4               = true
          [32m+[0m[0m ipv6               = (known after apply)
          [32m+[0m[0m ipv6_address       = (known after apply)
          [32m+[0m[0m mac_address        = (known after apply)
          [32m+[0m[0m nat                = false
          [32m+[0m[0m nat_ip_address     = (known after apply)
          [32m+[0m[0m nat_ip_version     = (known after apply)
          [32m+[0m[0m security_group_ids = (known after apply)
          [32m+[0m[0m subnet_id          = (known after apply)
        }
      [32m+[0m[0m network_interface {
          [32m+[0m[0m index              = 2
          [32m+[0m[0m ip_address         = "10.110.0.11"
          [32m+[0m[0m ipv4               = true
          [32m+[0m[0m ipv6               = (known after apply)
          [32m+[0m[0m ipv6_address       = (known after apply)
          [32m+[0m[0m mac_address        = (known after apply)
          [32m+[0m[0m nat                = false
          [32m+[0m[0m nat_ip_address     = (known after apply)
          [32m+[0m[0m nat_ip_version     = (known after apply)
          [32m+[0m[0m security_group_ids = (known after apply)
          [32m+[0m[0m subnet_id          = (known after apply)
        }

      [32m+[0m[0m resources {
          [32m+[0m[0m core_fraction = 5
          [32m+[0m[0m cores         = 2
          [32m+[0m[0m memory        = 2
        }

      [32m+[0m[0m scheduling_policy {
          [32m+[0m[0m preemptible = true
        }

      [32m+[0m[0m secondary_disk {
          [32m+[0m[0m auto_delete = false
          [32m+[0m[0m device_name = (known after apply)
          [32m+[0m[0m disk_id     = (known after apply)
          [32m+[0m[0m mode        = "READ_WRITE"
        }
    }

[1m  # yandex_compute_instance.nodeweb[2][0m will be created
[0m  [32m+[0m[0m resource "yandex_compute_instance" "nodeweb" {
      [32m+[0m[0m created_at                = (known after apply)
      [32m+[0m[0m folder_id                 = (known after apply)
      [32m+[0m[0m fqdn                      = (known after apply)
      [32m+[0m[0m gpu_cluster_id            = (known after apply)
      [32m+[0m[0m hostname                  = "otus-nodeweb-3"
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m maintenance_grace_period  = (known after apply)
      [32m+[0m[0m maintenance_policy        = (known after apply)
      [32m+[0m[0m metadata                  = {
          [32m+[0m[0m "ssh-keys"  = <<-EOT
                devops:ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIKmUhAyceqbbc3AivLkcg60EINDUgf8pTmvA0vnvs8gq sincere@sincere-ubuntuotus
            EOT
          [32m+[0m[0m "user-data" = <<-EOT
                #cloud-config
                users:
                  - name: devops
                    groups: sudo
                    shell: /bin/bash
                    sudo: ['ALL=(ALL) NOPASSWD:ALL'] 
                    ssh-authorized-keys:
                      - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIKmUhAyceqbbc3AivLkcg60EINDUgf8pTmvA0vnvs8gq sincere@sincere-ubuntuotus
                disable_root: true
                timezone: Europe/Moscow
                repo_update: true
                repo_upgrade: true
            EOT
        }
      [32m+[0m[0m name                      = "otus-nodeweb-3"
      [32m+[0m[0m network_acceleration_type = "standard"
      [32m+[0m[0m platform_id               = "standard-v1"
      [32m+[0m[0m service_account_id        = (known after apply)
      [32m+[0m[0m status                    = (known after apply)
      [32m+[0m[0m zone                      = (known after apply)

      [32m+[0m[0m boot_disk {
          [32m+[0m[0m auto_delete = true
          [32m+[0m[0m device_name = (known after apply)
          [32m+[0m[0m disk_id     = (known after apply)
          [32m+[0m[0m mode        = (known after apply)

          [32m+[0m[0m initialize_params {
              [32m+[0m[0m block_size  = (known after apply)
              [32m+[0m[0m description = (known after apply)
              [32m+[0m[0m image_id    = "fd8do7rb69jm50c3u8bs"
              [32m+[0m[0m name        = "boot-disk-nodeweb-3"
              [32m+[0m[0m size        = 10
              [32m+[0m[0m snapshot_id = (known after apply)
              [32m+[0m[0m type        = "network-hdd"
            }
        }

      [32m+[0m[0m network_interface {
          [32m+[0m[0m index              = 0
          [32m+[0m[0m ip_address         = "10.200.0.12"
          [32m+[0m[0m ipv4               = true
          [32m+[0m[0m ipv6               = (known after apply)
          [32m+[0m[0m ipv6_address       = (known after apply)
          [32m+[0m[0m mac_address        = (known after apply)
          [32m+[0m[0m nat                = false
          [32m+[0m[0m nat_ip_address     = (known after apply)
          [32m+[0m[0m nat_ip_version     = (known after apply)
          [32m+[0m[0m security_group_ids = (known after apply)
          [32m+[0m[0m subnet_id          = (known after apply)
        }
      [32m+[0m[0m network_interface {
          [32m+[0m[0m index              = 1
          [32m+[0m[0m ip_address         = "10.100.0.12"
          [32m+[0m[0m ipv4               = true
          [32m+[0m[0m ipv6               = (known after apply)
          [32m+[0m[0m ipv6_address       = (known after apply)
          [32m+[0m[0m mac_address        = (known after apply)
          [32m+[0m[0m nat                = false
          [32m+[0m[0m nat_ip_address     = (known after apply)
          [32m+[0m[0m nat_ip_version     = (known after apply)
          [32m+[0m[0m security_group_ids = (known after apply)
          [32m+[0m[0m subnet_id          = (known after apply)
        }
      [32m+[0m[0m network_interface {
          [32m+[0m[0m index              = 2
          [32m+[0m[0m ip_address         = "10.110.0.12"
          [32m+[0m[0m ipv4               = true
          [32m+[0m[0m ipv6               = (known after apply)
          [32m+[0m[0m ipv6_address       = (known after apply)
          [32m+[0m[0m mac_address        = (known after apply)
          [32m+[0m[0m nat                = false
          [32m+[0m[0m nat_ip_address     = (known after apply)
          [32m+[0m[0m nat_ip_version     = (known after apply)
          [32m+[0m[0m security_group_ids = (known after apply)
          [32m+[0m[0m subnet_id          = (known after apply)
        }

      [32m+[0m[0m resources {
          [32m+[0m[0m core_fraction = 5
          [32m+[0m[0m cores         = 2
          [32m+[0m[0m memory        = 2
        }

      [32m+[0m[0m scheduling_policy {
          [32m+[0m[0m preemptible = true
        }

      [32m+[0m[0m secondary_disk {
          [32m+[0m[0m auto_delete = false
          [32m+[0m[0m device_name = (known after apply)
          [32m+[0m[0m disk_id     = (known after apply)
          [32m+[0m[0m mode        = "READ_WRITE"
        }
    }

[1m  # yandex_lb_network_load_balancer.nlb[0m will be created
[0m  [32m+[0m[0m resource "yandex_lb_network_load_balancer" "nlb" {
      [32m+[0m[0m created_at          = (known after apply)
      [32m+[0m[0m deletion_protection = (known after apply)
      [32m+[0m[0m folder_id           = (known after apply)
      [32m+[0m[0m id                  = (known after apply)
      [32m+[0m[0m name                = "nlb"
      [32m+[0m[0m region_id           = (known after apply)
      [32m+[0m[0m type                = "external"

      [32m+[0m[0m attached_target_group {
          [32m+[0m[0m target_group_id = (known after apply)

          [32m+[0m[0m healthcheck {
              [32m+[0m[0m healthy_threshold   = 2
              [32m+[0m[0m interval            = 2
              [32m+[0m[0m name                = "http"
              [32m+[0m[0m timeout             = 1
              [32m+[0m[0m unhealthy_threshold = 2

              [32m+[0m[0m http_options {
                  [32m+[0m[0m path = "/index.html"
                  [32m+[0m[0m port = 80
                }
            }
        }

      [32m+[0m[0m listener {
          [32m+[0m[0m name        = "http"
          [32m+[0m[0m port        = 80
          [32m+[0m[0m protocol    = (known after apply)
          [32m+[0m[0m target_port = (known after apply)

          [32m+[0m[0m external_address_spec {
              [32m+[0m[0m address    = (known after apply)
              [32m+[0m[0m ip_version = "ipv4"
            }
        }
    }

[1m  # yandex_lb_target_group.frontend[0m will be created
[0m  [32m+[0m[0m resource "yandex_lb_target_group" "frontend" {
      [32m+[0m[0m created_at = (known after apply)
      [32m+[0m[0m folder_id  = (known after apply)
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m name       = "nlbfrontend"
      [32m+[0m[0m region_id  = (known after apply)

      [32m+[0m[0m target {
          [32m+[0m[0m address   = "10.100.0.200"
          [32m+[0m[0m subnet_id = (known after apply)
        }
      [32m+[0m[0m target {
          [32m+[0m[0m address   = "10.100.0.201"
          [32m+[0m[0m subnet_id = (known after apply)
        }
    }

[1m  # yandex_vpc_network.data[0m will be created
[0m  [32m+[0m[0m resource "yandex_vpc_network" "data" {
      [32m+[0m[0m created_at                = (known after apply)
      [32m+[0m[0m default_security_group_id = (known after apply)
      [32m+[0m[0m folder_id                 = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m labels                    = (known after apply)
      [32m+[0m[0m name                      = "data-net"
      [32m+[0m[0m subnet_ids                = (known after apply)
    }

[1m  # yandex_vpc_route_table.bastion-route[0m will be created
[0m  [32m+[0m[0m resource "yandex_vpc_route_table" "bastion-route" {
      [32m+[0m[0m created_at = (known after apply)
      [32m+[0m[0m folder_id  = (known after apply)
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m labels     = (known after apply)
      [32m+[0m[0m name       = "bastion-route"
      [32m+[0m[0m network_id = (known after apply)

      [32m+[0m[0m static_route {
          [32m+[0m[0m destination_prefix = "0.0.0.0/0"
          [32m+[0m[0m next_hop_address   = (known after apply)
        }
    }

[1m  # yandex_vpc_security_group.nat-instance-sg[0m will be created
[0m  [32m+[0m[0m resource "yandex_vpc_security_group" "nat-instance-sg" {
      [32m+[0m[0m created_at = (known after apply)
      [32m+[0m[0m folder_id  = (known after apply)
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m labels     = (known after apply)
      [32m+[0m[0m name       = "sg_nat_name"
      [32m+[0m[0m network_id = (known after apply)
      [32m+[0m[0m status     = (known after apply)

      [32m+[0m[0m egress {
          [32m+[0m[0m description    = "any"
          [32m+[0m[0m from_port      = -1
          [32m+[0m[0m id             = (known after apply)
          [32m+[0m[0m labels         = (known after apply)
          [32m+[0m[0m port           = -1
          [32m+[0m[0m protocol       = "ANY"
          [32m+[0m[0m to_port        = -1
          [32m+[0m[0m v4_cidr_blocks = [
              [32m+[0m[0m "0.0.0.0/0",
            ]
          [32m+[0m[0m v6_cidr_blocks = []
        }

      [32m+[0m[0m ingress {
          [32m+[0m[0m description    = "ext-http"
          [32m+[0m[0m from_port      = -1
          [32m+[0m[0m id             = (known after apply)
          [32m+[0m[0m labels         = (known after apply)
          [32m+[0m[0m port           = 80
          [32m+[0m[0m protocol       = "TCP"
          [32m+[0m[0m to_port        = -1
          [32m+[0m[0m v4_cidr_blocks = [
              [32m+[0m[0m "0.0.0.0/0",
            ]
          [32m+[0m[0m v6_cidr_blocks = []
        }
      [32m+[0m[0m ingress {
          [32m+[0m[0m description    = "ext-https"
          [32m+[0m[0m from_port      = -1
          [32m+[0m[0m id             = (known after apply)
          [32m+[0m[0m labels         = (known after apply)
          [32m+[0m[0m port           = 443
          [32m+[0m[0m protocol       = "TCP"
          [32m+[0m[0m to_port        = -1
          [32m+[0m[0m v4_cidr_blocks = [
              [32m+[0m[0m "0.0.0.0/0",
            ]
          [32m+[0m[0m v6_cidr_blocks = []
        }
      [32m+[0m[0m ingress {
          [32m+[0m[0m description    = "icmp"
          [32m+[0m[0m from_port      = -1
          [32m+[0m[0m id             = (known after apply)
          [32m+[0m[0m labels         = (known after apply)
          [32m+[0m[0m port           = -1
          [32m+[0m[0m protocol       = "ICMP"
          [32m+[0m[0m to_port        = -1
          [32m+[0m[0m v4_cidr_blocks = [
              [32m+[0m[0m "0.0.0.0/0",
            ]
          [32m+[0m[0m v6_cidr_blocks = []
        }
      [32m+[0m[0m ingress {
          [32m+[0m[0m description    = "ssh"
          [32m+[0m[0m from_port      = -1
          [32m+[0m[0m id             = (known after apply)
          [32m+[0m[0m labels         = (known after apply)
          [32m+[0m[0m port           = 22
          [32m+[0m[0m protocol       = "TCP"
          [32m+[0m[0m to_port        = -1
          [32m+[0m[0m v4_cidr_blocks = [
              [32m+[0m[0m "0.0.0.0/0",
            ]
          [32m+[0m[0m v6_cidr_blocks = []
        }
    }

[1m  # yandex_vpc_subnet.subnet-db[0m will be created
[0m  [32m+[0m[0m resource "yandex_vpc_subnet" "subnet-db" {
      [32m+[0m[0m created_at     = (known after apply)
      [32m+[0m[0m folder_id      = (known after apply)
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m labels         = (known after apply)
      [32m+[0m[0m name           = "subnetdb"
      [32m+[0m[0m network_id     = (known after apply)
      [32m+[0m[0m v4_cidr_blocks = [
          [32m+[0m[0m "10.110.0.0/24",
        ]
      [32m+[0m[0m v6_cidr_blocks = (known after apply)
      [32m+[0m[0m zone           = "ru-central1-b"
    }

[1m  # yandex_vpc_subnet.subnet-internet[0m will be created
[0m  [32m+[0m[0m resource "yandex_vpc_subnet" "subnet-internet" {
      [32m+[0m[0m created_at     = (known after apply)
      [32m+[0m[0m folder_id      = (known after apply)
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m labels         = (known after apply)
      [32m+[0m[0m name           = "subnetinternet"
      [32m+[0m[0m network_id     = (known after apply)
      [32m+[0m[0m v4_cidr_blocks = [
          [32m+[0m[0m "10.201.0.0/24",
        ]
      [32m+[0m[0m v6_cidr_blocks = (known after apply)
      [32m+[0m[0m zone           = "ru-central1-b"
    }

[1m  # yandex_vpc_subnet.subnet-manage[0m will be created
[0m  [32m+[0m[0m resource "yandex_vpc_subnet" "subnet-manage" {
      [32m+[0m[0m created_at     = (known after apply)
      [32m+[0m[0m folder_id      = (known after apply)
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m labels         = (known after apply)
      [32m+[0m[0m name           = "subnetmanage"
      [32m+[0m[0m network_id     = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m v4_cidr_blocks = [
          [32m+[0m[0m "10.200.0.0/24",
        ]
      [32m+[0m[0m v6_cidr_blocks = (known after apply)
      [32m+[0m[0m zone           = "ru-central1-b"
    }

[1m  # yandex_vpc_subnet.subnet-web[0m will be created
[0m  [32m+[0m[0m resource "yandex_vpc_subnet" "subnet-web" {
      [32m+[0m[0m created_at     = (known after apply)
      [32m+[0m[0m folder_id      = (known after apply)
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m labels         = (known after apply)
      [32m+[0m[0m name           = "subnetweb"
      [32m+[0m[0m network_id     = (known after apply)
      [32m+[0m[0m v4_cidr_blocks = [
          [32m+[0m[0m "10.100.0.0/24",
        ]
      [32m+[0m[0m v6_cidr_blocks = (known after apply)
      [32m+[0m[0m zone           = "ru-central1-b"
    }

[1mPlan:[0m 21 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m lb_ip_address = [
      [32m+[0m[0m {
          [32m+[0m[0m external_address_spec = [
              [32m+[0m[0m {
                  [32m+[0m[0m address    = (known after apply)
                  [32m+[0m[0m ip_version = "ipv4"
                },
            ]
          [32m+[0m[0m internal_address_spec = []
          [32m+[0m[0m name                  = "http"
          [32m+[0m[0m port                  = 80
          [32m+[0m[0m protocol              = (known after apply)
          [32m+[0m[0m target_port           = (known after apply)
        },
    ]
  [32m+[0m[0m otus-bastion  = [
      [32m+[0m[0m {
          [32m+[0m[0m fqdn                    = (known after apply)
          [32m+[0m[0m id                      = (known after apply)
          [32m+[0m[0m internal_data_ip_manage = [
              [32m+[0m[0m (known after apply),
            ]
          [32m+[0m[0m name                    = "otus-bastion-1"
          [32m+[0m[0m public_ip               = [
              [32m+[0m[0m (known after apply),
            ]
        },
    ]
  [32m+[0m[0m otus-frontend = [
      [32m+[0m[0m {
          [32m+[0m[0m fqdn                    = (known after apply)
          [32m+[0m[0m id                      = (known after apply)
          [32m+[0m[0m internal_data_ip_manage = [
              [32m+[0m[0m "10.200.0.200",
            ]
          [32m+[0m[0m internal_data_ip_web    = [
              [32m+[0m[0m "10.100.0.200",
            ]
          [32m+[0m[0m name                    = "otus-frontend-1"
          [32m+[0m[0m public_ip               = [
              [32m+[0m[0m (known after apply),
            ]
        },
      [32m+[0m[0m {
          [32m+[0m[0m fqdn                    = (known after apply)
          [32m+[0m[0m id                      = (known after apply)
          [32m+[0m[0m internal_data_ip_manage = [
              [32m+[0m[0m "10.200.0.201",
            ]
          [32m+[0m[0m internal_data_ip_web    = [
              [32m+[0m[0m "10.100.0.201",
            ]
          [32m+[0m[0m name                    = "otus-frontend-2"
          [32m+[0m[0m public_ip               = [
              [32m+[0m[0m (known after apply),
            ]
        },
    ]
  [32m+[0m[0m otus-nodedb   = [
      [32m+[0m[0m {
          [32m+[0m[0m fqdn                    = (known after apply)
          [32m+[0m[0m id                      = (known after apply)
          [32m+[0m[0m internal_data_ip_db     = [
              [32m+[0m[0m "10.110.0.50",
            ]
          [32m+[0m[0m internal_data_ip_manage = [
              [32m+[0m[0m "10.200.0.50",
            ]
          [32m+[0m[0m name                    = "otus-nodedb-1"
        },
    ]
  [32m+[0m[0m otus-nodeweb  = [
      [32m+[0m[0m {
          [32m+[0m[0m fqdn                    = (known after apply)
          [32m+[0m[0m id                      = (known after apply)
          [32m+[0m[0m internal_data_ip_db     = [
              [32m+[0m[0m "10.110.0.10",
            ]
          [32m+[0m[0m internal_data_ip_manage = [
              [32m+[0m[0m "10.200.0.10",
            ]
          [32m+[0m[0m internal_data_ip_web    = [
              [32m+[0m[0m "10.100.0.10",
            ]
          [32m+[0m[0m name                    = "otus-nodeweb-1"
        },
      [32m+[0m[0m {
          [32m+[0m[0m fqdn                    = (known after apply)
          [32m+[0m[0m id                      = (known after apply)
          [32m+[0m[0m internal_data_ip_db     = [
              [32m+[0m[0m "10.110.0.11",
            ]
          [32m+[0m[0m internal_data_ip_manage = [
              [32m+[0m[0m "10.200.0.11",
            ]
          [32m+[0m[0m internal_data_ip_web    = [
              [32m+[0m[0m "10.100.0.11",
            ]
          [32m+[0m[0m name                    = "otus-nodeweb-2"
        },
      [32m+[0m[0m {
          [32m+[0m[0m fqdn                    = (known after apply)
          [32m+[0m[0m id                      = (known after apply)
          [32m+[0m[0m internal_data_ip_db     = [
              [32m+[0m[0m "10.110.0.12",
            ]
          [32m+[0m[0m internal_data_ip_manage = [
              [32m+[0m[0m "10.200.0.12",
            ]
          [32m+[0m[0m internal_data_ip_web    = [
              [32m+[0m[0m "10.100.0.12",
            ]
          [32m+[0m[0m name                    = "otus-nodeweb-3"
        },
    ]
[0m[1myandex_vpc_network.data: Creating...[0m[0m
[0m[1myandex_compute_disk.volumes[1]: Creating...[0m[0m
[0m[1myandex_compute_disk.volumes[2]: Creating...[0m[0m
[0m[1myandex_compute_disk.volumes[0]: Creating...[0m[0m
[0m[1myandex_vpc_network.data: Creation complete after 2s [id=enpn7vr97oh1dqqnqgm0][0m
[0m[1myandex_vpc_subnet.subnet-web: Creating...[0m[0m
[0m[1myandex_vpc_subnet.subnet-internet: Creating...[0m[0m
[0m[1myandex_vpc_subnet.subnet-db: Creating...[0m[0m
[0m[1myandex_vpc_security_group.nat-instance-sg: Creating...[0m[0m
[0m[1myandex_vpc_subnet.subnet-internet: Creation complete after 1s [id=e2lsps24jr5bln9rn15o][0m
[0m[1myandex_vpc_subnet.subnet-web: Creation complete after 1s [id=e2l5059n9h6k9e78pao1][0m
[0m[1myandex_vpc_subnet.subnet-db: Creation complete after 2s [id=e2llgrmo7kbv2cj5c1eq][0m
[0m[1myandex_vpc_security_group.nat-instance-sg: Creation complete after 2s [id=enp94om3jnk01dgcm1kv][0m
[0m[1myandex_compute_instance.bastion[0]: Creating...[0m[0m
[0m[1myandex_compute_disk.volumes[1]: Creation complete after 10s [id=epdpkiukjq0jlh4ig1df][0m
[0m[1myandex_compute_disk.volumes[2]: Still creating... [10s elapsed][0m[0m
[0m[1myandex_compute_disk.volumes[0]: Still creating... [10s elapsed][0m[0m
[0m[1myandex_compute_disk.volumes[2]: Creation complete after 11s [id=epd58oa777s8dqlld9s1][0m
[0m[1myandex_compute_disk.volumes[0]: Creation complete after 11s [id=epd1i4ehiqh8m4mv8uvu][0m
[0m[1myandex_compute_instance.bastion[0]: Still creating... [10s elapsed][0m[0m
[0m[1myandex_compute_instance.bastion[0]: Still creating... [20s elapsed][0m[0m
[0m[1myandex_compute_instance.bastion[0]: Still creating... [30s elapsed][0m[0m
[0m[1myandex_compute_instance.bastion[0]: Still creating... [40s elapsed][0m[0m
[0m[1myandex_compute_instance.bastion[0]: Still creating... [50s elapsed][0m[0m
[0m[1myandex_compute_instance.bastion[0]: Creation complete after 59s [id=epd6g1s38rmpjbanlj10][0m
[0m[1myandex_vpc_route_table.bastion-route: Creating...[0m[0m
[0m[1myandex_vpc_route_table.bastion-route: Creation complete after 1s [id=enpf267eglogqnbjtngo][0m
[0m[1myandex_vpc_subnet.subnet-manage: Creating...[0m[0m
[0m[1myandex_vpc_subnet.subnet-manage: Creation complete after 1s [id=e2lk9as176e3078qmm4h][0m
[0m[1myandex_compute_instance.nodedb[0]: Creating...[0m[0m
[0m[1myandex_compute_instance.nodeweb[2]: Creating...[0m[0m
[0m[1myandex_compute_instance.frontend[1]: Creating...[0m[0m
[0m[1myandex_compute_instance.nodeweb[0]: Creating...[0m[0m
[0m[1myandex_compute_instance.frontend[0]: Creating...[0m[0m
[0m[1myandex_compute_instance.nodeweb[1]: Creating...[0m[0m
[0m[1myandex_compute_instance.nodedb[0]: Still creating... [10s elapsed][0m[0m
[0m[1myandex_compute_instance.nodeweb[2]: Still creating... [10s elapsed][0m[0m
[0m[1myandex_compute_instance.frontend[1]: Still creating... [10s elapsed][0m[0m
[0m[1myandex_compute_instance.nodeweb[0]: Still creating... [10s elapsed][0m[0m
[0m[1myandex_compute_instance.frontend[0]: Still creating... [10s elapsed][0m[0m
[0m[1myandex_compute_instance.nodeweb[1]: Still creating... [10s elapsed][0m[0m
[0m[1myandex_compute_instance.nodedb[0]: Still creating... [20s elapsed][0m[0m
[0m[1myandex_compute_instance.frontend[1]: Still creating... [20s elapsed][0m[0m
[0m[1myandex_compute_instance.nodeweb[2]: Still creating... [20s elapsed][0m[0m
[0m[1myandex_compute_instance.nodeweb[0]: Still creating... [20s elapsed][0m[0m
[0m[1myandex_compute_instance.frontend[0]: Still creating... [20s elapsed][0m[0m
[0m[1myandex_compute_instance.nodeweb[1]: Still creating... [20s elapsed][0m[0m
[0m[1myandex_compute_instance.nodedb[0]: Still creating... [30s elapsed][0m[0m
[0m[1myandex_compute_instance.nodeweb[2]: Still creating... [30s elapsed][0m[0m
[0m[1myandex_compute_instance.frontend[1]: Still creating... [30s elapsed][0m[0m
[0m[1myandex_compute_instance.nodeweb[0]: Still creating... [30s elapsed][0m[0m
[0m[1myandex_compute_instance.frontend[0]: Still creating... [30s elapsed][0m[0m
[0m[1myandex_compute_instance.nodeweb[1]: Still creating... [30s elapsed][0m[0m
[0m[1myandex_compute_instance.nodeweb[2]: Creation complete after 34s [id=epdd6hahm9hrsfko9hqd][0m
[0m[1myandex_compute_instance.nodeweb[1]: Creation complete after 37s [id=epdj5hvoedo0u0usf19n][0m
[0m[1myandex_compute_instance.nodeweb[0]: Creation complete after 39s [id=epdibq9o6v2cqcj27tjs][0m
[0m[1myandex_compute_instance.nodedb[0]: Creation complete after 40s [id=epdhsk005pe4o3m7v9mr][0m
[0m[1myandex_compute_instance.frontend[1]: Still creating... [40s elapsed][0m[0m
[0m[1myandex_compute_instance.frontend[0]: Still creating... [40s elapsed][0m[0m
[0m[1myandex_compute_instance.frontend[0]: Creation complete after 42s [id=epdl9u65o5hkburiukii][0m
[0m[1myandex_compute_instance.frontend[1]: Creation complete after 44s [id=epdsvbp2ekuhrd7i3spq][0m
[0m[1myandex_lb_target_group.frontend: Creating...[0m[0m
[0m[1mlocal_file.group_vars: Creating...[0m[0m
[0m[1mlocal_file.inventory: Creating...[0m[0m
[0m[1mlocal_file.group_vars: Creation complete after 0s [id=75829435e143d70ff69c0450ec92c4621779c545][0m
[0m[1mlocal_file.inventory: Provisioning with 'local-exec'...[0m[0m
[0m[1mlocal_file.inventory (local-exec):[0m [0mExecuting: ["/bin/sh" "-c" "sleep 180"]
[0m[1myandex_lb_target_group.frontend: Creation complete after 2s [id=enp5ulms1qp1q2bmjaiu][0m
[0m[1myandex_lb_network_load_balancer.nlb: Creating...[0m[0m
[0m[1myandex_lb_network_load_balancer.nlb: Creation complete after 3s [id=enp9tue894c660sei4hv][0m
[0m[1mlocal_file.inventory: Still creating... [10s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [20s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [30s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [40s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [50s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [1m0s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [1m10s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [1m20s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [1m30s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [1m40s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [1m50s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [2m0s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [2m10s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [2m20s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [2m30s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [2m40s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [2m50s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [3m0s elapsed][0m[0m
[0m[1mlocal_file.inventory: Provisioning with 'local-exec'...[0m[0m
[0m[1mlocal_file.inventory (local-exec):[0m [0mExecuting: ["/bin/sh" "-c" "ANSIBLE_CONFIG=./../ansible/ansible.cfg ansible-playbook ./../ansible/playbooks/000_start.yml"]

[0m[1mlocal_file.inventory (local-exec):[0m [0mPLAY [Playbook of 000_start] ***************************************************

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [Gathering Facts] *********************************************************
[0m[1mlocal_file.inventory (local-exec):[0m [0mok: [otus-frontend-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mok: [otus-frontend-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mok: [otus-nodeweb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mok: [otus-nodeweb-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mok: [otus-nodeweb-3]
[0m[1mlocal_file.inventory (local-exec):[0m [0mok: [otus-nodedb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mok: [otus-bastion-1]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [002_base : Set hostname] *************************************************
[0m[1mlocal_file.inventory (local-exec):[0m [0mok: [otus-frontend-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mok: [otus-frontend-1]
[0m[1mlocal_file.inventory: Still creating... [3m10s elapsed][0m[0m
[0m[1mlocal_file.inventory (local-exec):[0m [0mok: [otus-bastion-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mok: [otus-nodeweb-3]
[0m[1mlocal_file.inventory (local-exec):[0m [0mok: [otus-nodedb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mok: [otus-nodeweb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mok: [otus-nodeweb-2]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [002_base : set timezone] *************************************************
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-frontend-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-frontend-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-bastion-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-3]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodedb-1]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [002_base : Update and upgrade apt packages] ******************************
[0m[1mlocal_file.inventory: Still creating... [3m20s elapsed][0m[0m
[0m[1mlocal_file.inventory (local-exec):[0m [0mok: [otus-bastion-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-frontend-1]
[0m[1mlocal_file.inventory: Still creating... [3m30s elapsed][0m[0m
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-frontend-2]
[0m[1mlocal_file.inventory: Still creating... [3m40s elapsed][0m[0m
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-3]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-1]
[0m[1mlocal_file.inventory: Still creating... [3m50s elapsed][0m[0m
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodedb-1]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [002_base : Synchronize datetime | Install chrony] ************************
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-frontend-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-frontend-1]
[0m[1mlocal_file.inventory: Still creating... [4m0s elapsed][0m[0m
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-3]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodedb-1]
[0m[1mlocal_file.inventory: Still creating... [4m10s elapsed][0m[0m
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-bastion-1]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [002_base : Synchronize datetime | Turn on chronyd] ***********************
[0m[1mlocal_file.inventory (local-exec):[0m [0mok: [otus-frontend-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mok: [otus-frontend-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mok: [otus-nodeweb-3]
[0m[1mlocal_file.inventory (local-exec):[0m [0mok: [otus-bastion-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mok: [otus-nodedb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mok: [otus-nodeweb-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mok: [otus-nodeweb-1]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [002_base : install base tools] *******************************************
[0m[1mlocal_file.inventory: Still creating... [4m20s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [4m30s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [4m40s elapsed][0m[0m
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-frontend-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-frontend-1]
[0m[1mlocal_file.inventory: Still creating... [4m50s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [5m0s elapsed][0m[0m
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-bastion-1]
[0m[1mlocal_file.inventory: Still creating... [5m10s elapsed][0m[0m
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-3]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodedb-1]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [003_nginx_frontend : Check Base Packages] ********************************
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1] => (item={'package': 'nginx', 'state': 'latest'})
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1] => (item={'package': 'openssl', 'state': 'present'})
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-1] => (item={'package': 'nginx', 'state': 'latest'})
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-1] => (item={'package': 'openssl', 'state': 'present'})
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-2] => (item={'package': 'nginx', 'state': 'latest'})
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-2] => (item={'package': 'openssl', 'state': 'present'})
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-3] => (item={'package': 'nginx', 'state': 'latest'})
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-3] => (item={'package': 'openssl', 'state': 'present'})
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodedb-1] => (item={'package': 'nginx', 'state': 'latest'})
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodedb-1] => (item={'package': 'openssl', 'state': 'present'})
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-frontend-2] => (item={'package': 'nginx', 'state': 'latest'})
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-frontend-1] => (item={'package': 'nginx', 'state': 'latest'})
[0m[1mlocal_file.inventory: Still creating... [5m20s elapsed][0m[0m
[0m[1mlocal_file.inventory (local-exec):[0m [0mok: [otus-frontend-2] => (item={'package': 'openssl', 'state': 'present'})
[0m[1mlocal_file.inventory (local-exec):[0m [0mok: [otus-frontend-1] => (item={'package': 'openssl', 'state': 'present'})

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [003_nginx_frontend : Create a user nginx with a home directory] **********
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-3]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodedb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-frontend-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-frontend-1]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [003_nginx_frontend : adding existing user 'nginxuser' to group sudo] *****
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-3]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodedb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-frontend-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-frontend-1]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [003_nginx_frontend : Remove DefaultSite (delete file)] *******************
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-3]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodedb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-frontend-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-frontend-1]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [003_nginx_frontend : Delete content & directory] *************************
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1] => (item=/etc/nginx/sites-available)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1] => (item=/etc/nginx/sites-enabled)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-1] => (item=/etc/nginx/sites-available)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-1] => (item=/etc/nginx/sites-enabled)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-2] => (item=/etc/nginx/sites-available)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-2] => (item=/etc/nginx/sites-enabled)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-3] => (item=/etc/nginx/sites-available)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-3] => (item=/etc/nginx/sites-enabled)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodedb-1] => (item=/etc/nginx/sites-available)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodedb-1] => (item=/etc/nginx/sites-enabled)
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-frontend-2] => (item=/etc/nginx/sites-available)
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-frontend-1] => (item=/etc/nginx/sites-available)
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-frontend-2] => (item=/etc/nginx/sites-enabled)
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-frontend-1] => (item=/etc/nginx/sites-enabled)

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [003_nginx_frontend : Create conf directory] ******************************
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1] => (item=/etc/nginx/sites-available)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1] => (item=/etc/nginx/sites-enabled)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-1] => (item=/etc/nginx/sites-available)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-1] => (item=/etc/nginx/sites-enabled)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-2] => (item=/etc/nginx/sites-available)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-2] => (item=/etc/nginx/sites-enabled)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-3] => (item=/etc/nginx/sites-available)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-3] => (item=/etc/nginx/sites-enabled)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodedb-1] => (item=/etc/nginx/sites-available)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodedb-1] => (item=/etc/nginx/sites-enabled)
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-frontend-2] => (item=/etc/nginx/sites-available)
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-frontend-1] => (item=/etc/nginx/sites-available)
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-frontend-2] => (item=/etc/nginx/sites-enabled)
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-frontend-1] => (item=/etc/nginx/sites-enabled)

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [003_nginx_frontend : Create an app directory if it does not exist] *******
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-3]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodedb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-frontend-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-frontend-1]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [003_nginx_frontend : Copy Nginx site-configuration file.] ****************
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-3]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodedb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-frontend-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-frontend-1]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [003_nginx_frontend : Copy Nginx site-configuration file.] ****************
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-3]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodedb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-frontend-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-frontend-1]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [003_nginx_frontend : Check Nginx Sites File Symlink] *********************
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-3]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodedb-1]
[0m[1mlocal_file.inventory: Still creating... [5m30s elapsed][0m[0m
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-frontend-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-frontend-1]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [003_nginx_frontend : restart nginx] **************************************
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-3]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodedb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-frontend-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-frontend-1]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [004_backend_glusterfs : Add node1 to /etc/hosts] *************************
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodedb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-3]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-2]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [004_backend_glusterfs : Add node1 to /etc/hosts] *************************
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodedb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-3]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-2]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [004_backend_glusterfs : Add node1 to /etc/hosts] *************************
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodedb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-3]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-2]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [004_backend_glusterfs : Install mkfs.xfs] ********************************
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1] => (item={'package': 'xfsprogs', 'state': 'latest'})
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-1] => (item={'package': 'xfsprogs', 'state': 'latest'})
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-2] => (item={'package': 'xfsprogs', 'state': 'latest'})
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodedb-1] => (item={'package': 'xfsprogs', 'state': 'latest'})
[0m[1mlocal_file.inventory: Still creating... [5m40s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [5m50s elapsed][0m[0m
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-3] => (item={'package': 'xfsprogs', 'state': 'latest'})
[0m[1mlocal_file.inventory: Still creating... [6m0s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [6m10s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [6m20s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [6m30s elapsed][0m[0m
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-2] => (item={'package': 'xfsprogs', 'state': 'latest'})
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-1] => (item={'package': 'xfsprogs', 'state': 'latest'})

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [004_backend_glusterfs : Configuring xfs on /dev/vdb] *********************
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodedb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0m[WARNING]: Consider using 'become', 'become_method', and 'become_user' rather
[0m[1mlocal_file.inventory (local-exec):[0m [0mthan running sudo
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-3]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-2]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [004_backend_glusterfs : Ensure Gluster mount directories exist.] *********
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1] => (item=/glusterfs)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-1] => (item=/glusterfs)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-2] => (item=/glusterfs)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodedb-1] => (item=/glusterfs)
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-3] => (item=/glusterfs)
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-1] => (item=/glusterfs)
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-2] => (item=/glusterfs)

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [004_backend_glusterfs : Ensure Gluster disk is mounted.] *****************
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodedb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-3]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-1]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [004_backend_glusterfs : Ensure Gluster brick and mount directories exist.] ***
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1] => (item=/glusterfs/br0)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1] => (item=/glusterfs)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1] => (item=/opt/gfsvol)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-1] => (item=/glusterfs/br0)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-1] => (item=/glusterfs)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-1] => (item=/opt/gfsvol)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-2] => (item=/glusterfs/br0)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-2] => (item=/glusterfs)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-2] => (item=/opt/gfsvol)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodedb-1] => (item=/glusterfs/br0)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodedb-1] => (item=/glusterfs)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodedb-1] => (item=/opt/gfsvol)
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-3] => (item=/glusterfs/br0)
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-1] => (item=/glusterfs/br0)
[0m[1mlocal_file.inventory (local-exec):[0m [0mok: [otus-nodeweb-3] => (item=/glusterfs)
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-2] => (item=/glusterfs/br0)
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-3] => (item=/opt/gfsvol)
[0m[1mlocal_file.inventory: Still creating... [6m40s elapsed][0m[0m
[0m[1mlocal_file.inventory (local-exec):[0m [0mok: [otus-nodeweb-1] => (item=/glusterfs)
[0m[1mlocal_file.inventory (local-exec):[0m [0mok: [otus-nodeweb-2] => (item=/glusterfs)
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-1] => (item=/opt/gfsvol)
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-2] => (item=/opt/gfsvol)

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [004_backend_glusterfs : Install GlusterFS server & client] ***************
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodedb-1]
[0m[1mlocal_file.inventory: Still creating... [6m50s elapsed][0m[0m
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-3]
[0m[1mlocal_file.inventory: Still creating... [7m0s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [7m10s elapsed][0m[0m
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-2]
[0m[1mlocal_file.inventory: Still creating... [7m20s elapsed][0m[0m
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-1]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [004_backend_glusterfs : Restart GlusterFS] *******************************
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodedb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-3]
[0m[1mlocal_file.inventory: Still creating... [7m30s elapsed][0m[0m
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-2]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [004_backend_glusterfs : Create a trusted storage pool] *******************
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-3]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodedb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-1]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [004_backend_glusterfs : Create gluster volume] ***************************
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-3]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodedb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-1]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [004_backend_glusterfs : Start gluster volume] ****************************
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-3]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodedb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mok: [otus-nodeweb-1]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [004_backend_glusterfs : Ensure Gluster volume is mounted.] ***************
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodedb-1]
[0m[1mlocal_file.inventory: Still creating... [7m40s elapsed][0m[0m
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-3]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-2]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [005_nginx_backend : Check Base Packages] *********************************
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-1] => (item={'package': 'nginx', 'state': 'latest'})
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1] => (item={'package': 'nginx', 'state': 'latest'})
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-2] => (item={'package': 'nginx', 'state': 'latest'})
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodedb-1] => (item={'package': 'nginx', 'state': 'latest'})
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-3] => (item={'package': 'nginx', 'state': 'latest'})
[0m[1mlocal_file.inventory: Still creating... [7m50s elapsed][0m[0m
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-2] => (item={'package': 'nginx', 'state': 'latest'})
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-1] => (item={'package': 'nginx', 'state': 'latest'})

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [005_nginx_backend : Create a user nginx with a home directory] ***********
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodedb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-3]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-1]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [005_nginx_backend : adding existing user 'nginxuser' to group sudo] ******
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodedb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-3]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-2]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [005_nginx_backend : Remove DefaultSite (delete file)] ********************
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodedb-1]
[0m[1mlocal_file.inventory: Still creating... [8m0s elapsed][0m[0m
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-3]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-1]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [005_nginx_backend : Delete content & directory] **************************
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1] => (item=/etc/nginx/sites-available)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1] => (item=/etc/nginx/sites-enabled)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-1] => (item=/etc/nginx/sites-available)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-1] => (item=/etc/nginx/sites-enabled)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-2] => (item=/etc/nginx/sites-available)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-2] => (item=/etc/nginx/sites-enabled)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodedb-1] => (item=/etc/nginx/sites-available)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodedb-1] => (item=/etc/nginx/sites-enabled)
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-3] => (item=/etc/nginx/sites-available)
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-2] => (item=/etc/nginx/sites-available)
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-1] => (item=/etc/nginx/sites-available)
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-3] => (item=/etc/nginx/sites-enabled)
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-2] => (item=/etc/nginx/sites-enabled)
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-1] => (item=/etc/nginx/sites-enabled)

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [005_nginx_backend : Create conf directory] *******************************
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1] => (item=/etc/nginx/sites-available)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1] => (item=/etc/nginx/sites-enabled)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-1] => (item=/etc/nginx/sites-available)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-1] => (item=/etc/nginx/sites-enabled)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-2] => (item=/etc/nginx/sites-available)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-2] => (item=/etc/nginx/sites-enabled)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodedb-1] => (item=/etc/nginx/sites-available)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodedb-1] => (item=/etc/nginx/sites-enabled)
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-3] => (item=/etc/nginx/sites-available)
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-2] => (item=/etc/nginx/sites-available)
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-1] => (item=/etc/nginx/sites-available)
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-3] => (item=/etc/nginx/sites-enabled)
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-1] => (item=/etc/nginx/sites-enabled)
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-2] => (item=/etc/nginx/sites-enabled)

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [005_nginx_backend : Create an app directory if it does not exist] ********
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodedb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-3]
[0m[1mlocal_file.inventory (local-exec):[0m [0mok: [otus-nodeweb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mok: [otus-nodeweb-2]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [005_nginx_backend : Copy Nginx index file.] ******************************
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodedb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-3]
[0m[1mlocal_file.inventory: Still creating... [8m10s elapsed][0m[0m
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-1]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [005_nginx_backend : Copy Nginx site-configuration file.] *****************
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodedb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-3]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-1]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [005_nginx_backend : Copy Nginx site-configuration file.] *****************
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodedb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-3]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-1]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [005_nginx_backend : Check Nginx Sites File Symlink] **********************
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodedb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-3]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-1]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [005_nginx_backend : Include php-fpm service] *****************************
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodedb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mincluded: /home/sincere/otus/02_highload/lessons/07_nginxhighload/ansible/roles/005_nginx_backend/tasks/php-fpm.yml for otus-nodeweb-1, otus-nodeweb-2, otus-nodeweb-3

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [005_nginx_backend : Copy Nginx index PHP file.] **************************
[0m[1mlocal_file.inventory: Still creating... [8m20s elapsed][0m[0m
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-3]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-2]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [005_nginx_backend : Install PHP-FPM Debian] ******************************
[0m[1mlocal_file.inventory: Still creating... [8m30s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [8m40s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [8m50s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [9m0s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [9m10s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [9m20s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [9m30s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [9m40s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [9m50s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [10m0s elapsed][0m[0m
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-3]
[0m[1mlocal_file.inventory: Still creating... [10m10s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [10m20s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [10m30s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [10m40s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [10m50s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [11m0s elapsed][0m[0m
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-2]
[0m[1mlocal_file.inventory: Still creating... [11m10s elapsed][0m[0m
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-1]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [005_nginx_backend : Start php-fpm service] *******************************
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-3]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-1]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [005_nginx_backend : Include wordpress section] ***************************
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodedb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mincluded: /home/sincere/otus/02_highload/lessons/07_nginxhighload/ansible/roles/005_nginx_backend/tasks/wordpress.yml for otus-nodeweb-1, otus-nodeweb-2, otus-nodeweb-3

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [005_nginx_backend : Wordpress | Remove elements from /var/www/html/] *****
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-3]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [005_nginx_backend : Wordpress | Create directory] ************************
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-3]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-1]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [005_nginx_backend : Wordpress | Extract archive in /opt/gfsvol/wordpress] ***
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-3]
[0m[1mlocal_file.inventory: Still creating... [11m20s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [11m30s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [11m40s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [11m50s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [12m0s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [12m10s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [12m20s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [12m30s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [12m40s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [12m50s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [13m0s elapsed][0m[0m
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-1]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [005_nginx_backend : Wordpress | Move files from /opt/gfsvol/wordpress/wordpress to /opt/gfsvol/wordpress] ***
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-3]
[0m[1mlocal_file.inventory: Still creating... [13m10s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [13m20s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [13m30s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [13m40s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [13m50s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [14m0s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [14m10s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [14m20s elapsed][0m[0m
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-1]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [005_nginx_backend : Wordpress | Remove wordpress dir] ********************
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-3]
[0m[1mlocal_file.inventory: Still creating... [14m30s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [14m40s elapsed][0m[0m
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-1]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [005_nginx_backend : Wordpress | Fetch random salts for wp-config.php] ****
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-3]
[0m[1mlocal_file.inventory (local-exec):[0m [0mok: [otus-nodeweb-1]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [005_nginx_backend : set wp_salt fact] ************************************
[0m[1mlocal_file.inventory (local-exec):[0m [0mok: [otus-nodeweb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-3]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [005_nginx_backend : Wordpress | Copy wp-config.php file] *****************
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-3]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-1]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [005_nginx_backend : Wordpress | Change ownership of installation directory] ***
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-3]
[0m[1mlocal_file.inventory: Still creating... [14m50s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [15m0s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [15m10s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [15m20s elapsed][0m[0m
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-1]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [005_nginx_backend : Installing dependencies] *****************************
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-3]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-2]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [006_install_database : Installing mariadb-server] ************************
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-3]
[0m[1mlocal_file.inventory: Still creating... [15m30s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [15m40s elapsed][0m[0m
[0m[1mlocal_file.inventory: Still creating... [15m50s elapsed][0m[0m
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodedb-1]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [006_install_database : Start MariaDB] ************************************
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-3]
[0m[1mlocal_file.inventory (local-exec):[0m [0mok: [otus-nodedb-1]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [006_install_database : Installing dependencies] **************************
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-3]
[0m[1mlocal_file.inventory: Still creating... [16m0s elapsed][0m[0m
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodedb-1]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [006_install_database : Enable bind] **************************************
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-3]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodedb-1]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [006_install_database : Set the root password] ****************************
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1] => (item=51.250.107.69)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1] => (item=10.110.0.50)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1] => (item=127.0.0.1)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1] => (item=::1)
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1] => (item=localhost)

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [006_install_database : Create mysql database] ****************************
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-3]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodedb-1]

[0m[1mlocal_file.inventory (local-exec):[0m [0mTASK [006_install_database : Create database user with name mysqluser and password from vars with all database privileges] ***
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-bastion-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-nodeweb-3]
[0m[1mlocal_file.inventory (local-exec):[0m [0m[WARNING]: Option column_case_sensitive is not provided. The default is now
[0m[1mlocal_file.inventory (local-exec):[0m [0mfalse, so the column's name will be uppercased. The default will be changed to
[0m[1mlocal_file.inventory (local-exec):[0m [0mtrue in community.mysql 4.0.0.
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodedb-1]

[0m[1mlocal_file.inventory (local-exec):[0m [0mRUNNING HANDLER [004_backend_glusterfs : daemon-reload] ************************
[0m[1mlocal_file.inventory: Still creating... [16m10s elapsed][0m[0m
[0m[1mlocal_file.inventory (local-exec):[0m [0mok: [otus-nodeweb-3]
[0m[1mlocal_file.inventory (local-exec):[0m [0mok: [otus-nodeweb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mok: [otus-nodeweb-2]

[0m[1mlocal_file.inventory (local-exec):[0m [0mRUNNING HANDLER [005_nginx_backend : restart nginx] ****************************
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-2]
[0m[1mlocal_file.inventory (local-exec):[0m [0mskipping: [otus-frontend-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-3]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-2]

[0m[1mlocal_file.inventory (local-exec):[0m [0mRUNNING HANDLER [005_nginx_backend : reload nginx] *****************************
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-3]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-1]
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodeweb-2]

[0m[1mlocal_file.inventory (local-exec):[0m [0mRUNNING HANDLER [006_install_database : restart mariadb] ***********************
[0m[1mlocal_file.inventory (local-exec):[0m [0mchanged: [otus-nodedb-1]

[0m[1mlocal_file.inventory (local-exec):[0m [0mPLAY RECAP *********************************************************************
[0m[1mlocal_file.inventory (local-exec):[0m [0motus-bastion-1             : ok=7    changed=3    unreachable=0    failed=0    skipped=45   rescued=0    ignored=0
[0m[1mlocal_file.inventory (local-exec):[0m [0motus-frontend-1            : ok=18   changed=15   unreachable=0    failed=0    skipped=34   rescued=0    ignored=0
[0m[1mlocal_file.inventory (local-exec):[0m [0motus-frontend-2            : ok=18   changed=15   unreachable=0    failed=0    skipped=34   rescued=0    ignored=0
[0m[1mlocal_file.inventory (local-exec):[0m [0motus-nodedb-1              : ok=14   changed=10   unreachable=0    failed=0    skipped=38   rescued=0    ignored=0
[0m[1mlocal_file.inventory (local-exec):[0m [0motus-nodeweb-1             : ok=49   changed=39   unreachable=0    failed=0    skipped=18   rescued=0    ignored=0
[0m[1mlocal_file.inventory (local-exec):[0m [0motus-nodeweb-2             : ok=38   changed=31   unreachable=0    failed=0    skipped=29   rescued=0    ignored=0
[0m[1mlocal_file.inventory (local-exec):[0m [0motus-nodeweb-3             : ok=38   changed=32   unreachable=0    failed=0    skipped=29   rescued=0    ignored=0

[0m[1mlocal_file.inventory: Creation complete after 16m18s [id=dbbcdddd4cc903b39016d47f6895c337fe3b2d30][0m
[0m[1m[32m
Apply complete! Resources: 21 added, 0 changed, 0 destroyed.
[0m[0m[1m[32m
Outputs:

[0mlb_ip_address = tolist([
  {
    "external_address_spec" = toset([
      {
        "address" = "84.201.151.65"
        "ip_version" = "ipv4"
      },
    ])
    "internal_address_spec" = toset([])
    "name" = "http"
    "port" = 80
    "protocol" = "tcp"
    "target_port" = 80
  },
])
otus-bastion = [
  {
    "fqdn" = "otus-bastion-1.ru-central1.internal"
    "id" = "epd6g1s38rmpjbanlj10"
    "internal_data_ip_manage" = [
      "10.201.0.25",
    ]
    "name" = "otus-bastion-1"
    "public_ip" = [
      "51.250.107.69",
    ]
  },
]
otus-frontend = [
  {
    "fqdn" = "otus-frontend-1.ru-central1.internal"
    "id" = "epdl9u65o5hkburiukii"
    "internal_data_ip_manage" = [
      "10.200.0.200",
    ]
    "internal_data_ip_web" = [
      "10.100.0.200",
    ]
    "name" = "otus-frontend-1"
    "public_ip" = [
      "89.169.175.21",
    ]
  },
  {
    "fqdn" = "otus-frontend-2.ru-central1.internal"
    "id" = "epdsvbp2ekuhrd7i3spq"
    "internal_data_ip_manage" = [
      "10.200.0.201",
    ]
    "internal_data_ip_web" = [
      "10.100.0.201",
    ]
    "name" = "otus-frontend-2"
    "public_ip" = [
      "89.169.174.53",
    ]
  },
]
otus-nodedb = [
  {
    "fqdn" = "otus-nodedb-1.ru-central1.internal"
    "id" = "epdhsk005pe4o3m7v9mr"
    "internal_data_ip_db" = [
      "10.110.0.50",
    ]
    "internal_data_ip_manage" = [
      "10.200.0.50",
    ]
    "name" = "otus-nodedb-1"
  },
]
otus-nodeweb = [
  {
    "fqdn" = "otus-nodeweb-1.ru-central1.internal"
    "id" = "epdibq9o6v2cqcj27tjs"
    "internal_data_ip_db" = [
      "10.110.0.10",
    ]
    "internal_data_ip_manage" = [
      "10.200.0.10",
    ]
    "internal_data_ip_web" = [
      "10.100.0.10",
    ]
    "name" = "otus-nodeweb-1"
  },
  {
    "fqdn" = "otus-nodeweb-2.ru-central1.internal"
    "id" = "epdj5hvoedo0u0usf19n"
    "internal_data_ip_db" = [
      "10.110.0.11",
    ]
    "internal_data_ip_manage" = [
      "10.200.0.11",
    ]
    "internal_data_ip_web" = [
      "10.100.0.11",
    ]
    "name" = "otus-nodeweb-2"
  },
  {
    "fqdn" = "otus-nodeweb-3.ru-central1.internal"
    "id" = "epdd6hahm9hrsfko9hqd"
    "internal_data_ip_db" = [
      "10.110.0.12",
    ]
    "internal_data_ip_manage" = [
      "10.200.0.12",
    ]
    "internal_data_ip_web" = [
      "10.100.0.12",
    ]
    "name" = "otus-nodeweb-3"
  },
]
