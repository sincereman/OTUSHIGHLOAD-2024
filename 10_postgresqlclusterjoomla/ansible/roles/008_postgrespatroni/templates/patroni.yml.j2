name: {{ansible_hostname}}
scope: {{ postgresql_cluster_name }}
namespace: /service/


log:
  traceback_level: DEBUG
  level: DEBUG
  dir: {{ patroni_var_dirlog }}
  file_num: 5

restapi:
  listen: 0.0.0.0:{{patroni_port}}
  connect_address: {{ hostvars[ansible_hostname]['ansible_eth1']['ipv4']['address'] }}:{{patroni_port}}

{% if dcs == 'zookeeper' or dcs == 'etcd' or dcs == 'etcd3' %}
{{ dcs }}:
  hosts:
{%   for item in dcs_server_ips
 %}
    - {{ item.ip }}:{{ dcs_port[dcs] }}
{%
     endfor %}
{% endif %}

bootstrap:
  # Configuration parameters for distributed configuration store (DCS)
  #method: initdb  
#
  # method: pg_createcluster
  # pg_createcluster:
  #   command: /usr/share/patroni/pg_createcluster_patroni
#      
  dcs:
    ttl: 30
    loop_wait: 10
    retry_timeout: 10
    check_timeline: true
    maximum_lag_on_failover: 1048576
    postgresql:
      # Use pg_rewind during bootstrap    
      use_pg_rewind: true
      #
      remove_data_directory_on_rewind_failure: true
      remove_data_directory_on_diverged_timelines: true      
      #
      #use_slots: true
      # pg_hba.conf entries for replication and general access
      pg_hba:
      - local   all             postgres                                peer      
      - local   all             all                                     trust
      - host    all             all             0.0.0.0/0               md5      
      - host    replication     replicator      127.0.0.1/32            md5
      - host    replication     replicator      ::1/128                 md5
      - host    replication     replicator      10.110.0.0/24           md5
      #Additional parameters
      parameters:
        # max_connections: 800
        # superuser_reserved_connections: 5
        # max_locks_per_transaction: 64
        # max_prepared_transactions: 0
        # huge_pages: try
        # shared_buffers: 512MB
        # work_mem: 128MB
        # maintenance_work_mem: 256MB
        # effective_cache_size: 4GB
        # checkpoint_timeout: 15min
        # checkpoint_completion_target: 0.9
        # min_wal_size: 2GB
        # max_wal_size: 4GB
        # wal_buffers: 32MB
        # default_statistics_target: 1000
        # seq_page_cost: 1
        # random_page_cost: 4
        # effective_io_concurrency: 2
        # synchronous_commit: on
        # autovacuum: on
        # autovacuum_max_workers: 5
        # autovacuum_vacuum_scale_factor: 0.01
        # autovacuum_analyze_scale_factor: 0.02
        # autovacuum_vacuum_cost_limit: 200
        # autovacuum_vacuum_cost_delay: 20
        # autovacuum_naptime: 1s
        # max_files_per_process: 4096
        # archive_mode: on
        # archive_timeout: 1800s
        # archive_command: cd .
        # wal_level: replica
        # wal_keep_segments: 130
        # max_wal_senders: 10
        # max_replication_slots: 10
        # hot_standby: on
        # hot_standby_feedback: True
        # wal_log_hints: on
        # shared_preload_libraries: pg_stat_statements,auto_explain
        # pg_stat_statements.max: 10000
        # pg_stat_statements.track: all
        # pg_stat_statements.save: off
        # auto_explain.log_min_duration: 10s
        # auto_explain.log_analyze: true
        # auto_explain.log_buffers: true
        # auto_explain.log_timing: false
        # auto_explain.log_triggers: true
        # auto_explain.log_verbose: true
        # auto_explain.log_nested_statements: true
        # track_io_timing: on
        # log_lock_waits: on
        # log_temp_files: 0
        # track_activities: on
        # track_counts: on
        # track_functions: all
        log_checkpoints: on
        logging_collector: on
        log_statement: mod
        log_truncate_on_rotation: on
        log_rotation_age: 1d
        log_rotation_size: 0
        log_line_prefix: '%m [%p] %q%u@%d '
        log_filename: 'postgresql-%a.log'
        log_directory: /var/log/postgresql
  #
  # Initdb configuration
  initdb:
  - encoding: UTF8
  - data-checksums
  #

      

# Patroni PostgreSQL Configuration
postgresql:
  # Custom clone method
  # The options --scope= and --datadir= are passed to the custom script by
  # patroni and passed on to pg_createcluster by pg_clonecluster_patroni
# 
  # create_replica_method:
  #   - pg_clonecluster
  # pg_clonecluster:
  #   command: /usr/share/patroni/pg_clonecluster_patroni
#    
  # PostgreSQL server listening address and port
  listen: 0.0.0.0:{{postgresql_port}}
  # Connect address for PostgreSQL clients
  connect_address: {{ hostvars[ansible_hostname]['ansible_eth1']['ipv4']['address'] }}:{{postgresql_port}}
  use_unix_socket: true
  # Data directory for PostgreSQL  
  data_dir: "{{ postgresql_data_dir_base }}/{{ postgresql_major_version }}/main"
  bin_dir: "/usr/lib/postgresql/{{ postgresql_major_version }}/bin"
  config_dir: "/etc/postgresql/{{ postgresql_major_version }}/{{ postgresql_cluster_name }}"
  # Path to the pgpass file  
  pgpass: "/tmp/{{ postgresql_cluster_name }}-{{ postgresql_major_version }}.pgpass"
  # Authentication configuration  
  authentication:
    # Replication of user credentials  
    replication:
      username: "{{ patroni_replication_user }}"
      password: "{{ patroni_replication_pass }}"
    # Superuser credentials      
    superuser:
      username: postgres
      password: {% if patroni_postgres_pass|length %}"{{ patroni_postgres_pass }}"{% endif %}

{% if patroni_rewind_user|length %}
    rewind:
      username: "{{ patroni_rewind_user }}"
      password: "{{ patroni_rewind_pass }}"
{% else %}
#    rewind:
#      username: "rewind"
#      password: "rewind-pass"
{% endif %}
  # create_replica_methods:
  #   - basebackup
  # basebackup:
  #   max-rate: '100M'
  #   checkpoint: 'fast'
  #parameters:
  #  unix_socket_directories: '..'


# Patroni Tags Configuration
tags:
    # Prevents a node from being promoted in case of failure
    nofailover: false
    # Prevents the load balancer from considering this node
    noloadbalance: false
    # Prevents a replica from being created by cloning
    clonefrom: false
    # Prevents synchronous replication from being enforced
    nosync: false
    nostream: false