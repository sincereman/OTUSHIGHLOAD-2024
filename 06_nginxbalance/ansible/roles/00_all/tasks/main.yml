---
- meta: end_play
  when: (ansible_distribution != "Debian")


  apt:
    name:         "{{ item.package }}"
    state:        "{{ item.state }}"
    update_cache: yes
  loop:
    - { package: "chrony",   state: "present" }
    - { package: "tree",   state: "present" }
    - { package: "tcpdump",   state: "present" }
    - { package: "bind-utils",   state: "present" }

- name: Set hostname
  hostname: 
    name: "{{ ansible_hostname }}"

- name: Add IP address of all hosts to all hosts
  lineinfile:
    dest: /etc/hosts
    regexp: '.*{{ item }}$'
    line: "{{ hostvars[item].ansible_host }} {{item}}"
    state: present
  when: hostvars[item].ansible_host is defined
  with_items: "{{ groups.all }}"

# tasks/hosts.yml
- name: Generate /etc/hosts file
  template:
    src=templates/hosts.j2
    dest=/etc/hosts

# - name: Add IP address of all hosts to all hosts
#   lineinfile:
#     dest: /etc/hosts
#     regexp: '.*{{ item }}$'
#     line: "{{ hostvars[item].ansible_host }} {{item}}"
#     state: present
#   when: hostvars[item].ansible_host is defined
#   with_items: "{{ groups.all }}"

# - name: Add node1 to /etc/hosts
#   lineinfile:
#     path: "/etc/hosts"
#     state: present
#     line: "10.100.0.10 otus-node-1"
#   when: (ansible_hostname != "otus-node-1")

# - name: Add node1 to /etc/hosts
#   lineinfile:
#     path: "/etc/hosts"
#     state: present
#     line: "10.100.0.11 otus-node-2"
#   when: (ansible_hostname != "otus-node-2")

# - name: Add node1 to /etc/hosts
#   lineinfile:
#     path: "/etc/hosts"
#     state: present
#     line: "10.100.0.12 otus-node-3"
#   when: (ansible_hostname != "otus-node-3")
