---

- name: Install GFS2 and cLVM software
  ansible.builtin.dnf:
    name: "{{ packages }}"
    enablerepo: resilientstorage
    state: present
  vars:
    packages:
    - gfs2-utils
    - lvm2-lockd
    - dlm

- name: Enable use_lvmlockd = 1
  ansible.builtin.lineinfile:
    path: /etc/lvm/lvm.conf
    regexp: '^# use_lvmlockd = 0'
    insertafter: '# use_lvmlockd = 0'    
    line: 'use_lvmlockd = 1'
  #notify: "restart cluster services"

# - name: Configuring cLVM
#   command: "{{ item }}"
#   with_items:
#     - "lvmconf --enable-cluster" 

# https://www.server-world.info/en/note?os=CentOS_Stream_9&p=pacemaker&f=7



- name: Configuring cluster for use DLM,LockD and create GFS2 filesystem ( Step 1)
  shell: |
    # set [no-quorum-policy=freeze] on GFS2
    #pcs property set stonith-enabled=false
    pcs property set no-quorum-policy=freeze
    # create controld resource
    # [dlm] ⇒ any name you like
    # [group] ⇒ any group name
    pcs resource create dlm ocf:pacemaker:controld op monitor interval=30s on-fail=fence group locking --future
    sleep 5
    # create clone of [locking] to activate it on all nodes in cluster
    pcs resource clone locking interleave=true
    sleep 5
    # create lvmlockd resource
    # [lvmlockdd] ⇒ any name
    # [group] ⇒ the same group with controld resource
    pcs resource create lvmlockdd ocf:heartbeat:lvmlockd op monitor interval=30s on-fail=fence group locking --future
    exit 0
  when: (ansible_hostname == "otus-node-1") 

- name: Configuring cluster for use DLM,LockD and create GFS2 filesystem ( Step 2) - Create PV and VG
  shell: |
    # pcs status --full
    pvcreate /dev/mapper/mpatha
    vgcreate  --shared vg_gfs2 /dev/mapper/mpatha
    exit 0
  when: (ansible_hostname == "otus-node-1") 

- name: Configuring cluster for use DLM,LockD and create GFS2 filesystem (Step 3)
  shell: |
    # set [no-quorum-policy=freeze] on GFS2
    lvmdevices --adddev /dev/mapper/mpatha
    vgchange --lock-start vg_gfs2
    exit 0
  when: (ansible_hostname != "otus-node-1") 

- name: Configuring cluster for use DLM,LockD and create GFS2 filesystem ( Step 4) - Create LV
  shell: |
    lvcreate -l 100%FREE -n lv_gfs2 vg_gfs2
    echo y | mkfs.gfs2 -O -j3 -p lock_dlm -t hacluster:gfs2 /dev/vg_gfs2/lv_gfs2
    exit 0
  when: (ansible_hostname == "otus-node-1") 

- name: Configuring cluster for use DLM,LockD and create GFS2 filesystem ( Step 5) - Activate LVM
  shell: |
    # create LVM-activate resource
    # [shared_lv] - any name
    # [group] - any group name
    pcs resource create shared_lv ocf:heartbeat:LVM-activate lvname=lv_gfs2 vgname=vg_gfs2 activation_mode=shared vg_access_mode=lvmlockd group shared_vg --future
    # create clone of [LVM-activate]
    pcs resource clone shared_vg interleave=true
    # set start order as [locking] - [shared_vg]
    pcs constraint order start locking-clone then shared_vg-clone
    # set that [shared_vg] and [locking] start on a same node
    pcs constraint colocation add shared_vg-clone with locking-clone
    # create Filesystem resource
    # [shared_fs]- any name
    # [device] - device with GFS2 formatted
    # [directory] - any directory youd like to mount GFS2 filesystem
    # [group] - the same group with LVM-activate resource
    pcs resource create shared_fs ocf:heartbeat:Filesystem device="/dev/vg_gfs2/lv_gfs2" directory="/home/gfs2-share" fstype="gfs2" options=noatime op monitor interval=10s on-fail=fence group shared_vg --future
    pcs cluster stop --all
    pcs cluster start --all
    sleep 60
    exit 0
  when: (ansible_hostname == "otus-node-1") 

# - name: Check pcs status
#   shell: "pcs status --full"
#   register: pcs_info
#   args:
#     executable: /bin/bash
#   tags: pcs_check

# - name: Check pcs_info
#   ansible.builtin.debug:
#     msg: "{{ pcs_info.stdout }}"
#   tags: pcs_check


- name: Check df -h  information
  shell: "df -hT /home/gfs2-share"
  register: gfs2_info
  args:
    executable: /bin/bash
  tags: gfs2_check

- name: Check gfs2_info
  ansible.builtin.debug:
    msg: "{{ gfs2_info.stdout }}"
  tags: gfs2_check
